<?xml version="1.0" encoding="UTF-8"?><TestSessionContainer xmlns="http://www.codecover.org/xml/testsession-container" Date="1587679126140" TestSessionContainerId="b51f7286-183b-496a-ae98-cadf02f19d6f" version="1.0">
<SrcFileList>
<SrcFile Content="package controller;&#13;&#10;&#13;&#10;import java.io.IOException;&#13;&#10;import java.io.PrintWriter;&#13;&#10;&#13;&#10;import javax.servlet.ServletException;&#13;&#10;import javax.servlet.annotation.WebServlet;&#13;&#10;import javax.servlet.http.HttpServlet;&#13;&#10;import javax.servlet.http.HttpServletRequest;&#13;&#10;import javax.servlet.http.HttpServletResponse;&#13;&#10;&#13;&#10;/**&#13;&#10; * Servlet implementation class EmpAdd&#13;&#10; */&#13;&#10;@WebServlet(&quot;/EmpAdd&quot;)&#13;&#10;public class Registration extends HttpServlet {&#13;&#10;&#9;private static final long serialVersionUID = 1L;&#13;&#10;       &#13;&#10;   &#13;&#10;&#9;protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {&#13;&#10;&#9;&#9;// TODO Auto-generated method stub&#13;&#10;PrintWriter pw=response.getWriter();&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;String eid = request.getParameter(&quot;eid&quot;);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;String fname = request.getParameter(&quot;fname&quot;);&#13;&#10;&#9;&#9;String lname = request.getParameter(&quot;lname&quot;);&#13;&#10;&#9;&#9;String gender = request.getParameter(&quot;gen&quot;);&#13;&#10;&#9;&#9;String dob = request.getParameter(&quot;dob&quot;);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;String job = request.getParameter(&quot;job&quot;);&#13;&#10;&#9;&#9;String contact = request.getParameter(&quot;contact&quot;);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;String email = request.getParameter(&quot;email&quot;);&#13;&#10;&#9;&#9;String addr = request.getParameter(&quot;addr&quot;);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;String accno = request.getParameter(&quot;accno&quot;);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;String bname = request.getParameter(&quot;bname&quot;);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//pw.print(&quot;ok&quot;);&#13;&#10;&#9;&#9;model.Employee obj=new model.Employee();&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#13;&#10;&#9;String result=obj.addEmployee(eid, fname, lname, gender, dob, job, contact, email, addr, accno, bname);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if(result.equals(&quot;success&quot;))&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;//response.sendRedirect(&quot;emplogin.jsp&quot;);&#13;&#10;&#9;&#9;&#9;String SuccessfulEmployeeRegistration = &quot;&lt;script language='javascript'&gt;window.alert('Employee Detials Addded.');window.location='emplrhome.jsp';&lt;/script&gt;&quot;;&#13;&#10;&#9;&#9;&#9;pw.print(SuccessfulEmployeeRegistration);&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;String FailEmployeeRegistration = &quot;error.jsp?msg=Employee Registration Failed&quot;;&#13;&#10;&#9;&#9;&#9;response.sendRedirect(FailEmployeeRegistration);&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#13;&#10;&#9;}&#13;&#10;&#13;&#10;&#9;&#13;&#10;}&#13;&#10;" Filename="Registration.java" Intrnl_Id="1"/>
<SrcFile Content="package controller;&#13;&#10;&#13;&#10;import static org.junit.Assert.*;&#13;&#10;import static org.mockito.Mockito.*;&#13;&#10;&#13;&#10;import org.mockito.ArgumentCaptor;&#13;&#10;import org.mockito.Mock;&#13;&#10;import org.mockito.Mockito;&#13;&#10;import org.mockito.MockitoAnnotations;&#13;&#10;&#13;&#10;import org.powermock.api.mockito.PowerMockito;&#13;&#10;import org.powermock.modules.junit4.PowerMockRunner;&#13;&#10;import org.powermock.core.classloader.annotations.PrepareForTest;&#13;&#10;&#13;&#10;import org.junit.Test;&#13;&#10;import org.junit.After;&#13;&#10;import org.junit.Before;&#13;&#10;import org.junit.runner.RunWith;&#13;&#10;&#13;&#10;import javax.naming.spi.DirStateFactory.Result;&#13;&#10;import javax.servlet.*;&#13;&#10;import javax.servlet.http.*;&#13;&#10;&#13;&#10;import java.io.IOException;&#13;&#10;import java.io.PrintWriter;&#13;&#10;import java.util.ArrayList;&#13;&#10;import java.util.HashMap;&#13;&#10;&#13;&#10;import model.Employee;&#13;&#10;&#13;&#10;//@RunWith(PowerMockRunner.class)&#13;&#10;@PrepareForTest({controller.Registration.class, model.Employee.class})&#13;&#10;&#13;&#10;public class RegistrationTest {&#9;&#13;&#10;&#9;HttpSession session = Mockito.mock(HttpSession.class);&#13;&#10;&#9;HttpServletRequest request = Mockito.mock(HttpServletRequest.class);&#13;&#10;&#9;HttpServletResponse response = Mockito.mock(HttpServletResponse.class);&#13;&#10;&#9;&#13;&#10;&#9;//Object of the class under test&#13;&#10;&#9;Registration registration = new Registration();&#13;&#10;&#9;&#13;&#10;&#9;//Mock and spy on the calls for the Employee class used in Registration&#13;&#10;&#9;Employee employeeMock = mock(Employee.class);&#13;&#10;&#9;Employee employeeSpy = spy(Employee.class);&#13;&#10;&#9;&#13;&#10;&#9;PrintWriter writer = Mockito.mock(PrintWriter.class);&#13;&#10;&#9;&#13;&#10;&#9;//Used to get the string Registration will use in Redirect and PrintWriter&#13;&#10;&#9;ArgumentCaptor&lt;String&gt; captor;&#13;&#10;&#9;&#13;&#10;&#9;//Value the PrintWriter should receive in Registration&#13;&#10;&#9;String successfulRegistration = &quot;&lt;script language='javascript'&gt;window.&quot;&#13;&#10;&#9;&#9;&#9;+ &quot;alert('Employee Detials Addded.');window.location=&quot;&#13;&#10;&#9;&#9;&#9;+ &quot;'emplrhome.jsp';&lt;/script&gt;&quot;;&#13;&#10;&#9;&#13;&#10;&#9;//Redirect link Registration should be using&#13;&#10;&#9;String failedRegistration = &#13;&#10;&#9;&#9;&#9;&quot;error.jsp?msg=Employee Registration Failed&quot;;&#13;&#10;&#9;&#13;&#10;&#9;//All values are set valid by default&#13;&#10;&#9;String eid = &quot;100&quot;;&#13;&#10;&#9;String fname = &quot;Clark&quot;;&#13;&#10;&#9;String lname = &quot;Kent&quot;;&#13;&#10;&#9;String gen = &quot;male&quot;;&#13;&#10;&#9;String dob = &quot;1938-04-18&quot;;&#13;&#10;&#9;String job = &quot;Hero&quot;;&#13;&#10;&#9;String contact = &quot;911&quot;;&#13;&#10;&#9;String email = &quot;super.man@email.com&quot;;&#13;&#10;&#9;String addr = &quot;W 56th ST&quot;;&#13;&#10;&#9;String accno = &quot;100&quot;;&#13;&#10;&#9;String bname = &quot;Bank of America&quot;;&#13;&#10;&#9;&#13;&#10;&#9;@Before&#13;&#10;&#9;public void setUp() throws Exception {&#13;&#10;&#9;&#9;when(request.getSession(true)).thenReturn(session);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;when(response.getWriter()).thenReturn(writer);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;captor = ArgumentCaptor.forClass(String.class);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;when(request.getParameter(&quot;eid&quot;)).thenReturn(eid);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;fname&quot;)).thenReturn(fname);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;lname&quot;)).thenReturn(lname);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;gen&quot;)).thenReturn(gen);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;dob&quot;)).thenReturn(dob);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;job&quot;)).thenReturn(job);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;contact&quot;)).thenReturn(contact);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;email&quot;)).thenReturn(email);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;addr&quot;)).thenReturn(addr);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;accno&quot;)).thenReturn(accno);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;bname&quot;)).thenReturn(bname);&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS-UT-001-Registration-001&#13;&#10;&#9; * Purpose: Test if doGet writes to PrintWriter when add employee&#13;&#10;&#9; * is successful&#13;&#10;&#9; * Test Setup:&#13;&#10;&#9; * Mock for Employee.java (employeeMock), HTTPSession (session), &#13;&#10;&#9; * HTTPServletRequest (request), HTTPServletResponse (response), &#13;&#10;&#9; * PrintWriter (writer). Registration object (registration), &#13;&#10;&#9; * ArgumentCaptor (captor), an input for PrintWriter when there is a &#13;&#10;&#9; * successful registration (successfulRegistration), and a redirect link &#13;&#10;&#9; * for a failed registration (failedRegistration).&#13;&#10;&#9; * Input: &#13;&#10;&#9; * eid = &quot;100&quot; , fname = &quot;Clark&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100”,&#13;&#10;&#9; * bname = &quot;Bank of America&quot; , request , response&#13;&#10;&#9; * Expected Output: Writer is equal to successfulRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_001_Registration_001() throws Exception {&#13;&#10;&#9;&#9;//Mock can be used since the return value is ignored&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeMock);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//All valid values and the return value is replaced with success&#13;&#10;&#9;&#9;when(employeeMock.addEmployee(eid, fname, lname, gen, dob, job, &#13;&#10;&#9;&#9;&#9;&#9;contact, email, addr, accno, bname)).thenReturn(&quot;success&quot;);&#13;&#10;&#13;&#10;&#9;&#9;//Run Registration class's doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#9;&#9;&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Capture data from PrintWriter&#13;&#10;&#9;&#9;verify(writer).print(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(successfulRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_002_Registration_002&#13;&#10;&#9; * Purpose: Test if doGet redirects correctly user when addEmployee fails&#13;&#10;&#9; * Test Setup: &#13;&#10;&#9; * Mock for Employee.java (employeeMock), HTTPSession (session), &#13;&#10;&#9; * HTTPServletRequest (request), HTTPServletResponse (response), &#13;&#10;&#9; * PrintWriter (writer). Registration object (registration), &#13;&#10;&#9; * ArgumentCaptor (captor), an input for PrintWriter when there is a &#13;&#10;&#9; * successful registration (successfulRegistration), and a redirect link &#13;&#10;&#9; * for a failed registration (failedRegistration).&#13;&#10;&#9; * Input:&#13;&#10;&#9; * eid = &quot;100&quot; , fname = &quot;Clark&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100”, &#13;&#10;&#9; * bname = &quot;Bank of America&quot;, request , response&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_002_Registration_002() throws Exception {&#13;&#10;&#9;&#9;//Mock can be used since the return value is ignored&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeMock);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//One invalid value and the return value is replaced with fail&#13;&#10;&#9;&#9;when(employeeMock.addEmployee(eid, fname, lname, gen, dob, job, &#13;&#10;&#9;&#9;&#9;&#9;contact, email, addr, accno, bname)).thenReturn(&quot;fail&quot;);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Capture the data used in the Redirect&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Check if registration failed&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS-UT-003-Registration-003&#13;&#10;&#9; * Purpose: Test if doGet writes to its PrintWriter with valid input&#13;&#10;&#9; * Test Setup:&#13;&#10;&#9; * Spy for Employee.java (employeeSpy). Mock for HTTPSession (session), &#13;&#10;&#9; * HTTPServletRequest (request), HTTPServletResponse (response), &#13;&#10;&#9; * PrintWriter (writer). Registration object (registration), &#13;&#10;&#9; * ArgumentCaptor (captor), an input for PrintWriter when there is a &#13;&#10;&#9; * successful registration (successfulRegistration), and a redirect link &#13;&#10;&#9; * for a failed registration (failedRegistration).&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;Clark&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100”, &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Writer is equal to successfulRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_003_Registration_003() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;success&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Run Registration class's doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#9;&#9;&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Capture data from PrintWriter&#13;&#10;&#9;&#9;verify(writer).print(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Check if registration was successful&#13;&#10;&#9;&#9;assertEquals(successfulRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_004_Registration_004&#13;&#10;&#9; * Purpose: Test if a negative employee ID will call Redirect&#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;-5&quot; , fname = &quot;Clark&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100&quot;,  &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_004_Registration_004() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Invalid eid&#13;&#10;&#9;&#9;String eid = &quot;-5&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with invalid eid&#13;&#10;&#9;&#9;when(request.getParameter(&quot;eid&quot;)).thenReturn(eid);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_005_Registration_005&#13;&#10;&#9; * Purpose: Test if letters and special characters in employee ID will call &#13;&#10;&#9; * Redirect&#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;ABC*&amp;123&quot; , fname = &quot;Clark&quot; , lname = &quot;Kent&quot; , &#13;&#10;&#9; * gen = &quot;male&quot; , dob = &quot;1938-04-18&quot;, job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100&quot; ,  &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_005_Registration_005() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Invalid eid&#13;&#10;&#9;&#9;String eid = &quot;ABC*&amp;123&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with invalid eid&#13;&#10;&#9;&#9;when(request.getParameter(&quot;eid&quot;)).thenReturn(eid);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_006_Registration_006&#13;&#10;&#9; * Purpose: Test if using an ID that is already in the database will call &#13;&#10;&#9; * redirect&#13;&#10;&#9; * Test Setup: Spy for employee class and an employee with the given eid &#13;&#10;&#9; * already in the database&#13;&#10;&#9; * Input: eid = &quot;1&quot; , fname = &quot;Clark&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100&quot;,  &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_006_Registration_006() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Duplicate eid&#13;&#10;&#9;&#9;String eid = &quot;1&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with duplicate&#13;&#10;&#9;&#9;when(request.getParameter(&quot;eid&quot;)).thenReturn(eid);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_007_Registration_007&#13;&#10;&#9; * Purpose: Test if “fname = failure” will call redirect&#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;failure&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; ,&#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100&quot;,  &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_007_Registration_007() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Invalid fname&#13;&#10;&#9;&#9;String fname = &quot;failure&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with invalid fname&#13;&#10;&#9;&#9;when(request.getParameter(&quot;fname&quot;)).thenReturn(fname);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_008_Registration_008&#13;&#10;&#9; * Purpose: Test if redirect is called if fname is left blank&#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100&quot;, &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_008_Registration_008() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Invalid fname&#13;&#10;&#9;&#9;String fname = &quot;&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with invalid fname&#13;&#10;&#9;&#9;when(request.getParameter(&quot;fname&quot;)).thenReturn(fname);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_009_Registration_009&#13;&#10;&#9; * Purpose: Test if redirect is called if fname contains numbers and &#13;&#10;&#9; * special characters&#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;&amp;u93rm4%&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; ,&#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100&quot; ,  &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_009_Registration_009() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Invalid fname&#13;&#10;&#9;&#9;String fname = &quot;&amp;u93rm4%&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with invalid fname&#13;&#10;&#9;&#9;when(request.getParameter(&quot;fname&quot;)).thenReturn(fname);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_010_Registration_010&#13;&#10;&#9; * Purpose: Test if redirect is called if lname is left blank&#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;Clark&quot; , lname = &quot;&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100&quot;,  &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_010_Registration_010() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Invalid lname&#13;&#10;&#9;&#9;String lname = &quot;&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with invalid lname&#13;&#10;&#9;&#9;when(request.getParameter(&quot;lname&quot;)).thenReturn(lname);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_011_Registration_011&#13;&#10;&#9; * Purpose: Test if redirect is called if lname contains numbers and &#13;&#10;&#9; * special characters &#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;Clark&quot; , lname = &quot;&amp;u93rm4%&quot; , &#13;&#10;&#9; * gen = &quot;male&quot; , dob = &quot;1938-04-18&quot;, job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100&quot; ,  &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_011_Registration_011() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Invalid lname&#13;&#10;&#9;&#9;String lname = &quot;&amp;u93rm4%&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with invalid lname&#13;&#10;&#9;&#9;when(request.getParameter(&quot;lname&quot;)).thenReturn(lname);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_012_Registration_012&#13;&#10;&#9; * Purpose: Test if PrintWriter is called if the fname and lname already &#13;&#10;&#9; * exist in the database but not the employee ID&#13;&#10;&#9; * Test Setup: Spy for employee class an employee with the given fname and&#13;&#10;&#9; * lname already in the database&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;Adam&quot; , lname = &quot;Sandler&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100&quot; ,  &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Writer is equal to successfulRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_012_Registration_012() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Duplicate fname and lname&#13;&#10;&#9;&#9;String fname = &quot;Adam&quot;;&#13;&#10;&#9;&#9;String lname = &quot;Sandler&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with invalid fname&#13;&#10;&#9;&#9;when(request.getParameter(&quot;fname&quot;)).thenReturn(fname);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;lname&quot;)).thenReturn(lname);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;success&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Capture data from PrintWriter&#13;&#10;&#9;&#9;verify(writer).print(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Check if registration was successful&#13;&#10;&#9;&#9;assertEquals(successfulRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_013_Registration_013&#13;&#10;&#9; * Purpose: Test if an invalid dob input will call redirect&#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;Clark&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;123456-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100&quot; ,  &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_013_Registration_013() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Invalid invalid&#13;&#10;&#9;&#9;String dob = &quot;123456-04-18&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with invalid dob&#13;&#10;&#9;&#9;when(request.getParameter(&quot;dob&quot;)).thenReturn(dob);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_014_Registration_014&#13;&#10;&#9; * Purpose: Test if empty job field will call PrintWriter&#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;Clark&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job =  &quot;&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100&quot; ,  &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Writer is equal to successfulRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_014_Registration_014() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Empty job input&#13;&#10;&#9;&#9;String job = &quot;&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with new job&#13;&#10;&#9;&#9;when(request.getParameter(&quot;job&quot;)).thenReturn(job);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;success&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Capture data from PrintWriter&#13;&#10;&#9;&#9;verify(writer).print(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Check if registration was successful&#13;&#10;&#9;&#9;assertEquals(successfulRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_015_Registration_015&#13;&#10;&#9; * Purpose: Test if redirect is called if contact contains only special &#13;&#10;&#9; * characters&#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;Clark&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;!@#$%^&amp;*()&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100&quot; ,  &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_015_Registration_015() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Invalid contact&#13;&#10;&#9;&#9;String contact = &quot;!@#$%^&amp;*()&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with invalid contact&#13;&#10;&#9;&#9;when(request.getParameter(&quot;contact&quot;)).thenReturn(contact);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_016_Registration_016&#13;&#10;&#9; * Purpose: Test if redirect will be called when using invalid email&#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;Clark&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;dailyPlanet&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100&quot;,  &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_016_Registration_016() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Invalid email&#13;&#10;&#9;&#9;String email = &quot;dailyPlanet&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with invalid email&#13;&#10;&#9;&#9;when(request.getParameter(&quot;email&quot;)).thenReturn(email);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_017_Registration_017&#13;&#10;&#9; * Purpose: Test if an invalid addr will call redirect&#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;Clark&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;Krypton&quot; , accno = &quot;100&quot;,  &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_017_Registration_017() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Invalid addr&#13;&#10;&#9;&#9;String addr = &quot;Krypton&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with invalid addr&#13;&#10;&#9;&#9;when(request.getParameter(&quot;addr&quot;)).thenReturn(addr);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_018_Registration_018&#13;&#10;&#9; * Purpose: Test if an invalid accno will call redirect&#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;Clark&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;&amp;#*S12&quot; ,  &#13;&#10;&#9; * bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_018_Registration_018() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Invalid accno&#13;&#10;&#9;&#9;String accno = &quot;&amp;#*S12&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with invalid accno&#13;&#10;&#9;&#9;when(request.getParameter(&quot;accno&quot;)).thenReturn(accno);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_019_Registration_019&#13;&#10;&#9; * Purpose: Test if accno and bname will call PrintWriter if both are left &#13;&#10;&#9; * blank&#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;Clark&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;&quot; ,  &#13;&#10;&#9; * bname = &quot;&quot;&#13;&#10;&#9; * Expected Output: Writer is equal to successfulRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_019_Registration_019() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Empty accno and bname&#13;&#10;&#9;&#9;String accno = &quot;&quot;;&#13;&#10;&#9;&#9;String bname = &quot;&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with empty accno and bname&#13;&#10;&#9;&#9;when(request.getParameter(&quot;accno&quot;)).thenReturn(accno);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;bname&quot;)).thenReturn(bname);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Capture data from PrintWriter&#13;&#10;&#9;&#9;verify(writer).print(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Check if registration was successful&#13;&#10;&#9;&#9;assertEquals(successfulRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_020_Registration_020&#13;&#10;&#9; * Purpose: Test if redirect is called if there is valid information for &#13;&#10;&#9; * accno and no input for bname&#13;&#10;&#9; * Test Setup: Spy for employee class&#13;&#10;&#9; * Input: eid = &quot;100&quot; , fname = &quot;Clark&quot; , lname = &quot;Kent&quot; , gen = &quot;male&quot; , &#13;&#10;&#9; * dob = &quot;1938-04-18&quot; , job = &quot;Hero&quot; , contact = &quot;911&quot; , &#13;&#10;&#9; * email = &quot;super.man@email.com&quot; , addr = &quot;W 56th ST&quot; , accno = &quot;100&quot;,  &#13;&#10;&#9; * bname = &quot;&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_020_Registration_020() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Empty accno and bname&#13;&#10;&#9;&#9;String accno = &quot;100&quot;;&#13;&#10;&#9;&#9;String bname = &quot;&quot;;&#13;&#10;&#13;&#10;&#9;&#9;//Replace with empty accno and bname&#13;&#10;&#9;&#9;when(request.getParameter(&quot;accno&quot;)).thenReturn(accno);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;bname&quot;)).thenReturn(bname);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;/*&#13;&#10;&#9; * Test Case ID: PMS_UT_021_Registration_021&#13;&#10;&#9; * Purpose: Test if redirect is called if all input matches an employee &#13;&#10;&#9; * already in the database&#13;&#10;&#9; * Test Setup: Spy for employee class and an employee with matching data in &#13;&#10;&#9; * the database&#13;&#10;&#9; * Input: eid = &quot;1&quot; , fname = &quot;Adam&quot; , lname = &quot;Sandler&quot; , gen = &quot;on&quot; , &#13;&#10;&#9; * dob = &quot;1901-01-01&quot; , job = &quot;Movie Star&quot; , contact = &quot;0&quot; , &#13;&#10;&#9; * email = &quot;adam.sandler@email.com&quot; , addr = &quot;2121 SW 12TH ST&quot; , &#13;&#10;&#9; * accno = &quot;1&quot;,  bname = &quot;Bank of America&quot;&#13;&#10;&#9; * Expected Output: Redirect runs with failedRegistration&#13;&#10;&#9; */&#13;&#10;&#9;@Test&#13;&#10;&#9;public void PMS_UT_021_Registration_021() throws Exception {&#13;&#10;&#9;&#9;//Spy is used to see what the return value is of addEmployee&#13;&#10;&#9;&#9;PowerMockito.whenNew(Employee.class).withNoArguments().&#13;&#10;&#9;&#9;&#9;thenReturn(employeeSpy);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Values already in database&#13;&#10;&#9;&#9;String eid = &quot;1&quot;;&#13;&#10;&#9;&#9;String fname = &quot;Adam&quot;;&#13;&#10;&#9;&#9;String lname = &quot;Sandler&quot;;&#13;&#10;&#9;&#9;String gen = &quot;on&quot;;&#13;&#10;&#9;&#9;String dob = &quot;1901-01-01&quot;;&#13;&#10;&#9;&#9;String job = &quot;Movie Star&quot;;&#13;&#10;&#9;&#9;String contact = &quot;0&quot;;&#13;&#10;&#9;&#9;String email = &quot;dam.sandler@email.com&quot;;&#13;&#10;&#9;&#9;String addr = &quot;2121 SW 12TH ST&quot;;&#13;&#10;&#9;&#9;String accno = &quot;1&quot;;&#13;&#10;&#9;&#9;String bname = &quot;Bank of America&quot;;&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;//Replace with duplicate values&#13;&#10;&#9;&#9;when(request.getParameter(&quot;eid&quot;)).thenReturn(eid);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;fname&quot;)).thenReturn(fname);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;lname&quot;)).thenReturn(lname);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;gen&quot;)).thenReturn(gen);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;dob&quot;)).thenReturn(dob);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;job&quot;)).thenReturn(job);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;contact&quot;)).thenReturn(contact);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;email&quot;)).thenReturn(email);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;addr&quot;)).thenReturn(addr);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;accno&quot;)).thenReturn(accno);&#13;&#10;&#9;&#9;when(request.getParameter(&quot;bname&quot;)).thenReturn(bname);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(&quot;fail&quot;, employeeSpy.addEmployee(eid, fname, lname, &#13;&#10;&#9;&#9;&#9;&#9;gen, dob, job, contact, email, addr, accno, bname));&#13;&#10;&#13;&#10;&#9;&#9;//Run doGet method&#13;&#10;&#9;&#9;registration.doGet(request, response);&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;verify(response).sendRedirect(captor.capture());&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assertEquals(failedRegistration, captor.getValue());&#13;&#10;&#9;}&#13;&#10;}&#13;&#10;" Filename="RegistrationTest.java" Intrnl_Id="2"/>
</SrcFileList>
<CritList>
<CritListEntry Name="org.codecover.model.utils.criteria.LoopCoverage" PluginName="org.codecover"/>
<CritListEntry Name="org.codecover.model.utils.criteria.QMOCoverage" PluginName="org.codecover"/>
<CritListEntry Name="org.codecover.model.utils.criteria.ConditionCoverage" PluginName="org.codecover"/>
<CritListEntry Name="org.codecover.model.utils.criteria.BranchCoverage" PluginName="org.codecover"/>
<CritListEntry Name="org.codecover.model.utils.criteria.SynchronizedStatementCoverage" PluginName="org.codecover"/>
<CritListEntry Name="org.codecover.model.utils.criteria.StatementCoverage" PluginName="org.codecover"/>
</CritList>
<BoolOpList/>
<HierarchyLvlTypeList>
<HierarchyLvlType EnglishName="package" IntrnlName="package" Intrnl_Id="3"/>
<HierarchyLvlType EnglishName="method" IntrnlName="method" Intrnl_Id="4"/>
<HierarchyLvlType EnglishName="class" IntrnlName="class" Intrnl_Id="5"/>
<HierarchyLvlType EnglishName="default package" IntrnlName="default package" Intrnl_Id="6"/>
</HierarchyLvlTypeList>
<MASTRoot>
<HierarchyLvl HierarchyLvlId="27" HierarchyLvlTypeId="6" Intrnl_Id="7" Name="default package">
<Header/>
<LocList/>
<HierarchyLvl HierarchyLvlId="26" HierarchyLvlTypeId="3" Intrnl_Id="8" Name="controller">
<Header/>
<LocList/>
<HierarchyLvl HierarchyLvlId="2" HierarchyLvlTypeId="5" Intrnl_Id="9" Name="Registration">
<Header>
<Loc EndOffset="424" SrcFileId="1" StartOffset="355"/>
</Header>
<LocList>
<Loc EndOffset="1901" SrcFileId="1" StartOffset="355"/>
</LocList>
<StmntSeq Intrnl_Id="10">
<LocList>
<Loc EndOffset="477" SrcFileId="1" StartOffset="429"/>
</LocList>
<BasicStmnt CovItemId="S1" CovItemPrefix="controller.Registration.java" Intrnl_Id="11">
<LocList>
<Loc EndOffset="477" SrcFileId="1" StartOffset="429"/>
</LocList>
</BasicStmnt>
</StmntSeq>
<HierarchyLvl HierarchyLvlId="1" HierarchyLvlTypeId="4" Intrnl_Id="12" Name="doGet">
<Header>
<Loc EndOffset="609" SrcFileId="1" StartOffset="494"/>
</Header>
<LocList>
<Loc EndOffset="1893" SrcFileId="1" StartOffset="494"/>
</LocList>
<StmntSeq Intrnl_Id="13">
<LocList>
<Loc EndOffset="687" SrcFileId="1" StartOffset="651"/>
<Loc EndOffset="736" SrcFileId="1" StartOffset="695"/>
<Loc EndOffset="789" SrcFileId="1" StartOffset="744"/>
<Loc EndOffset="838" SrcFileId="1" StartOffset="793"/>
<Loc EndOffset="886" SrcFileId="1" StartOffset="842"/>
<Loc EndOffset="931" SrcFileId="1" StartOffset="890"/>
<Loc EndOffset="980" SrcFileId="1" StartOffset="939"/>
<Loc EndOffset="1033" SrcFileId="1" StartOffset="984"/>
<Loc EndOffset="1086" SrcFileId="1" StartOffset="1041"/>
<Loc EndOffset="1133" SrcFileId="1" StartOffset="1090"/>
<Loc EndOffset="1186" SrcFileId="1" StartOffset="1141"/>
<Loc EndOffset="1239" SrcFileId="1" StartOffset="1194"/>
<Loc EndOffset="1316" SrcFileId="1" StartOffset="1276"/>
<Loc EndOffset="1430" SrcFileId="1" StartOffset="1327"/>
<Loc EndOffset="1882" SrcFileId="1" StartOffset="1438"/>
</LocList>
<BasicStmnt CovItemId="S2" CovItemPrefix="controller.Registration.java" Intrnl_Id="14">
<LocList>
<Loc EndOffset="687" SrcFileId="1" StartOffset="651"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S3" CovItemPrefix="controller.Registration.java" Intrnl_Id="15">
<LocList>
<Loc EndOffset="736" SrcFileId="1" StartOffset="695"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S4" CovItemPrefix="controller.Registration.java" Intrnl_Id="16">
<LocList>
<Loc EndOffset="789" SrcFileId="1" StartOffset="744"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S5" CovItemPrefix="controller.Registration.java" Intrnl_Id="17">
<LocList>
<Loc EndOffset="838" SrcFileId="1" StartOffset="793"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S6" CovItemPrefix="controller.Registration.java" Intrnl_Id="18">
<LocList>
<Loc EndOffset="886" SrcFileId="1" StartOffset="842"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S7" CovItemPrefix="controller.Registration.java" Intrnl_Id="19">
<LocList>
<Loc EndOffset="931" SrcFileId="1" StartOffset="890"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S8" CovItemPrefix="controller.Registration.java" Intrnl_Id="20">
<LocList>
<Loc EndOffset="980" SrcFileId="1" StartOffset="939"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S9" CovItemPrefix="controller.Registration.java" Intrnl_Id="21">
<LocList>
<Loc EndOffset="1033" SrcFileId="1" StartOffset="984"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S10" CovItemPrefix="controller.Registration.java" Intrnl_Id="22">
<LocList>
<Loc EndOffset="1086" SrcFileId="1" StartOffset="1041"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S11" CovItemPrefix="controller.Registration.java" Intrnl_Id="23">
<LocList>
<Loc EndOffset="1133" SrcFileId="1" StartOffset="1090"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S12" CovItemPrefix="controller.Registration.java" Intrnl_Id="24">
<LocList>
<Loc EndOffset="1186" SrcFileId="1" StartOffset="1141"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S13" CovItemPrefix="controller.Registration.java" Intrnl_Id="25">
<LocList>
<Loc EndOffset="1239" SrcFileId="1" StartOffset="1194"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S14" CovItemPrefix="controller.Registration.java" Intrnl_Id="26">
<LocList>
<Loc EndOffset="1316" SrcFileId="1" StartOffset="1276"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S15" CovItemPrefix="controller.Registration.java" Intrnl_Id="27">
<LocList>
<Loc EndOffset="1430" SrcFileId="1" StartOffset="1327"/>
</LocList>
</BasicStmnt>
<CondStmnt CovItemId="S16" CovItemPrefix="controller.Registration.java" Intrnl_Id="28">
<Branch CovItemId="B1" CovItemPrefix="controller.Registration.java" Implct="false" Intrnl_Id="29">
<Cond/>
<LocList>
<Loc EndOffset="1727" SrcFileId="1" StartOffset="1470"/>
</LocList>
<StmntSeq Intrnl_Id="30">
<LocList>
<Loc EndOffset="1676" SrcFileId="1" StartOffset="1521"/>
<Loc EndOffset="1722" SrcFileId="1" StartOffset="1681"/>
</LocList>
<BasicStmnt CovItemId="S17" CovItemPrefix="controller.Registration.java" Intrnl_Id="31">
<LocList>
<Loc EndOffset="1676" SrcFileId="1" StartOffset="1521"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S18" CovItemPrefix="controller.Registration.java" Intrnl_Id="32">
<LocList>
<Loc EndOffset="1722" SrcFileId="1" StartOffset="1681"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</Branch>
<Branch CovItemId="B2" CovItemPrefix="controller.Registration.java" Implct="false" Intrnl_Id="33">
<Cond>
<Loc EndOffset="1735" SrcFileId="1" StartOffset="1731"/>
</Cond>
<LocList>
<Loc EndOffset="1882" SrcFileId="1" StartOffset="1739"/>
</LocList>
<StmntSeq Intrnl_Id="34">
<LocList>
<Loc EndOffset="1824" SrcFileId="1" StartOffset="1745"/>
<Loc EndOffset="1877" SrcFileId="1" StartOffset="1829"/>
</LocList>
<BasicStmnt CovItemId="S19" CovItemPrefix="controller.Registration.java" Intrnl_Id="35">
<LocList>
<Loc EndOffset="1824" SrcFileId="1" StartOffset="1745"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S20" CovItemPrefix="controller.Registration.java" Intrnl_Id="36">
<LocList>
<Loc EndOffset="1877" SrcFileId="1" StartOffset="1829"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</Branch>
<Keyword EndOffset="1440" SrcFileId="1" StartOffset="1438"/>
<LocList>
<Loc EndOffset="1882" SrcFileId="1" StartOffset="1438"/>
</LocList>
<RootTerm CovItemId="C1" CovItemPrefix="controller.Registration.java" Intrnl_Id="37">
<BasicBoolTerm Intrnl_Id="38">
<LocList>
<Loc EndOffset="1465" SrcFileId="1" StartOffset="1441"/>
</LocList>
</BasicBoolTerm>
</RootTerm>
</CondStmnt>
</StmntSeq>
</HierarchyLvl>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="25" HierarchyLvlTypeId="5" Intrnl_Id="39" Name="RegistrationTest">
<Header>
<Loc EndOffset="899" SrcFileId="2" StartOffset="796"/>
</Header>
<LocList>
<Loc EndOffset="30246" SrcFileId="2" StartOffset="796"/>
</LocList>
<StmntSeq Intrnl_Id="40">
<LocList>
<Loc EndOffset="959" SrcFileId="2" StartOffset="905"/>
<Loc EndOffset="1030" SrcFileId="2" StartOffset="962"/>
<Loc EndOffset="1104" SrcFileId="2" StartOffset="1033"/>
<Loc EndOffset="1192" SrcFileId="2" StartOffset="1145"/>
<Loc EndOffset="1317" SrcFileId="2" StartOffset="1272"/>
<Loc EndOffset="1363" SrcFileId="2" StartOffset="1320"/>
<Loc EndOffset="1422" SrcFileId="2" StartOffset="1369"/>
<Loc EndOffset="1763" SrcFileId="2" StartOffset="1598"/>
<Loc EndOffset="1894" SrcFileId="2" StartOffset="1816"/>
<Loc EndOffset="1959" SrcFileId="2" StartOffset="1940"/>
<Loc EndOffset="1985" SrcFileId="2" StartOffset="1962"/>
<Loc EndOffset="2010" SrcFileId="2" StartOffset="1988"/>
<Loc EndOffset="2033" SrcFileId="2" StartOffset="2013"/>
<Loc EndOffset="2062" SrcFileId="2" StartOffset="2036"/>
<Loc EndOffset="2085" SrcFileId="2" StartOffset="2065"/>
<Loc EndOffset="2111" SrcFileId="2" StartOffset="2088"/>
<Loc EndOffset="2151" SrcFileId="2" StartOffset="2114"/>
<Loc EndOffset="2180" SrcFileId="2" StartOffset="2154"/>
<Loc EndOffset="2204" SrcFileId="2" StartOffset="2183"/>
<Loc EndOffset="2240" SrcFileId="2" StartOffset="2207"/>
</LocList>
<BasicStmnt CovItemId="S1" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="41">
<LocList>
<Loc EndOffset="959" SrcFileId="2" StartOffset="905"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S2" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="42">
<LocList>
<Loc EndOffset="1030" SrcFileId="2" StartOffset="962"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S3" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="43">
<LocList>
<Loc EndOffset="1104" SrcFileId="2" StartOffset="1033"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S4" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="44">
<LocList>
<Loc EndOffset="1192" SrcFileId="2" StartOffset="1145"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S5" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="45">
<LocList>
<Loc EndOffset="1317" SrcFileId="2" StartOffset="1272"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S6" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="46">
<LocList>
<Loc EndOffset="1363" SrcFileId="2" StartOffset="1320"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S7" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="47">
<LocList>
<Loc EndOffset="1422" SrcFileId="2" StartOffset="1369"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S8" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="48">
<LocList>
<Loc EndOffset="1763" SrcFileId="2" StartOffset="1598"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S9" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="49">
<LocList>
<Loc EndOffset="1894" SrcFileId="2" StartOffset="1816"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S10" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="50">
<LocList>
<Loc EndOffset="1959" SrcFileId="2" StartOffset="1940"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S11" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="51">
<LocList>
<Loc EndOffset="1985" SrcFileId="2" StartOffset="1962"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S12" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="52">
<LocList>
<Loc EndOffset="2010" SrcFileId="2" StartOffset="1988"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S13" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="53">
<LocList>
<Loc EndOffset="2033" SrcFileId="2" StartOffset="2013"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S14" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="54">
<LocList>
<Loc EndOffset="2062" SrcFileId="2" StartOffset="2036"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S15" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="55">
<LocList>
<Loc EndOffset="2085" SrcFileId="2" StartOffset="2065"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S16" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="56">
<LocList>
<Loc EndOffset="2111" SrcFileId="2" StartOffset="2088"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S17" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="57">
<LocList>
<Loc EndOffset="2151" SrcFileId="2" StartOffset="2114"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S18" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="58">
<LocList>
<Loc EndOffset="2180" SrcFileId="2" StartOffset="2154"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S19" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="59">
<LocList>
<Loc EndOffset="2204" SrcFileId="2" StartOffset="2183"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S20" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="60">
<LocList>
<Loc EndOffset="2240" SrcFileId="2" StartOffset="2207"/>
</LocList>
</BasicStmnt>
</StmntSeq>
<HierarchyLvl HierarchyLvlId="3" HierarchyLvlTypeId="4" Intrnl_Id="61" Name="setUp">
<Header>
<Loc EndOffset="2292" SrcFileId="2" StartOffset="2246"/>
</Header>
<LocList>
<Loc EndOffset="3090" SrcFileId="2" StartOffset="2246"/>
</LocList>
<StmntSeq Intrnl_Id="62">
<LocList>
<Loc EndOffset="2349" SrcFileId="2" StartOffset="2298"/>
<Loc EndOffset="2403" SrcFileId="2" StartOffset="2357"/>
<Loc EndOffset="2458" SrcFileId="2" StartOffset="2411"/>
<Loc EndOffset="2516" SrcFileId="2" StartOffset="2466"/>
<Loc EndOffset="2574" SrcFileId="2" StartOffset="2520"/>
<Loc EndOffset="2632" SrcFileId="2" StartOffset="2578"/>
<Loc EndOffset="2686" SrcFileId="2" StartOffset="2636"/>
<Loc EndOffset="2740" SrcFileId="2" StartOffset="2690"/>
<Loc EndOffset="2794" SrcFileId="2" StartOffset="2744"/>
<Loc EndOffset="2856" SrcFileId="2" StartOffset="2798"/>
<Loc EndOffset="2914" SrcFileId="2" StartOffset="2860"/>
<Loc EndOffset="2970" SrcFileId="2" StartOffset="2918"/>
<Loc EndOffset="3028" SrcFileId="2" StartOffset="2974"/>
<Loc EndOffset="3086" SrcFileId="2" StartOffset="3032"/>
</LocList>
<BasicStmnt CovItemId="S21" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="63">
<LocList>
<Loc EndOffset="2349" SrcFileId="2" StartOffset="2298"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S22" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="64">
<LocList>
<Loc EndOffset="2403" SrcFileId="2" StartOffset="2357"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S23" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="65">
<LocList>
<Loc EndOffset="2458" SrcFileId="2" StartOffset="2411"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S24" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="66">
<LocList>
<Loc EndOffset="2516" SrcFileId="2" StartOffset="2466"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S25" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="67">
<LocList>
<Loc EndOffset="2574" SrcFileId="2" StartOffset="2520"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S26" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="68">
<LocList>
<Loc EndOffset="2632" SrcFileId="2" StartOffset="2578"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S27" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="69">
<LocList>
<Loc EndOffset="2686" SrcFileId="2" StartOffset="2636"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S28" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="70">
<LocList>
<Loc EndOffset="2740" SrcFileId="2" StartOffset="2690"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S29" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="71">
<LocList>
<Loc EndOffset="2794" SrcFileId="2" StartOffset="2744"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S30" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="72">
<LocList>
<Loc EndOffset="2856" SrcFileId="2" StartOffset="2798"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S31" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="73">
<LocList>
<Loc EndOffset="2914" SrcFileId="2" StartOffset="2860"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S32" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="74">
<LocList>
<Loc EndOffset="2970" SrcFileId="2" StartOffset="2918"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S33" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="75">
<LocList>
<Loc EndOffset="3028" SrcFileId="2" StartOffset="2974"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S34" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="76">
<LocList>
<Loc EndOffset="3086" SrcFileId="2" StartOffset="3032"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="4" HierarchyLvlTypeId="4" Intrnl_Id="77" Name="PMS_UT_001_Registration_001">
<Header>
<Loc EndOffset="4057" SrcFileId="2" StartOffset="3991"/>
</Header>
<LocList>
<Loc EndOffset="4648" SrcFileId="2" StartOffset="3991"/>
</LocList>
<StmntSeq Intrnl_Id="78">
<LocList>
<Loc EndOffset="4204" SrcFileId="2" StartOffset="4119"/>
<Loc EndOffset="4409" SrcFileId="2" StartOffset="4280"/>
<Loc EndOffset="4496" SrcFileId="2" StartOffset="4458"/>
<Loc EndOffset="4580" SrcFileId="2" StartOffset="4541"/>
<Loc EndOffset="4644" SrcFileId="2" StartOffset="4588"/>
</LocList>
<BasicStmnt CovItemId="S35" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="79">
<LocList>
<Loc EndOffset="4204" SrcFileId="2" StartOffset="4119"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S36" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="80">
<LocList>
<Loc EndOffset="4409" SrcFileId="2" StartOffset="4280"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S37" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="81">
<LocList>
<Loc EndOffset="4496" SrcFileId="2" StartOffset="4458"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S38" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="82">
<LocList>
<Loc EndOffset="4580" SrcFileId="2" StartOffset="4541"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S39" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="83">
<LocList>
<Loc EndOffset="4644" SrcFileId="2" StartOffset="4588"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="5" HierarchyLvlTypeId="4" Intrnl_Id="84" Name="PMS_UT_002_Registration_002">
<Header>
<Loc EndOffset="5600" SrcFileId="2" StartOffset="5534"/>
</Header>
<LocList>
<Loc EndOffset="6212" SrcFileId="2" StartOffset="5534"/>
</LocList>
<StmntSeq Intrnl_Id="85">
<LocList>
<Loc EndOffset="5747" SrcFileId="2" StartOffset="5662"/>
<Loc EndOffset="5947" SrcFileId="2" StartOffset="5821"/>
<Loc EndOffset="6015" SrcFileId="2" StartOffset="5977"/>
<Loc EndOffset="6114" SrcFileId="2" StartOffset="6066"/>
<Loc EndOffset="6208" SrcFileId="2" StartOffset="6156"/>
</LocList>
<BasicStmnt CovItemId="S40" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="86">
<LocList>
<Loc EndOffset="5747" SrcFileId="2" StartOffset="5662"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S41" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="87">
<LocList>
<Loc EndOffset="5947" SrcFileId="2" StartOffset="5821"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S42" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="88">
<LocList>
<Loc EndOffset="6015" SrcFileId="2" StartOffset="5977"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S43" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="89">
<LocList>
<Loc EndOffset="6114" SrcFileId="2" StartOffset="6066"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S44" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="90">
<LocList>
<Loc EndOffset="6208" SrcFileId="2" StartOffset="6156"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="6" HierarchyLvlTypeId="4" Intrnl_Id="91" Name="PMS_UT_003_Registration_003">
<Header>
<Loc EndOffset="7144" SrcFileId="2" StartOffset="7078"/>
</Header>
<LocList>
<Loc EndOffset="7714" SrcFileId="2" StartOffset="7078"/>
</LocList>
<StmntSeq Intrnl_Id="92">
<LocList>
<Loc EndOffset="7298" SrcFileId="2" StartOffset="7214"/>
<Loc EndOffset="7431" SrcFileId="2" StartOffset="7306"/>
<Loc EndOffset="7520" SrcFileId="2" StartOffset="7482"/>
<Loc EndOffset="7604" SrcFileId="2" StartOffset="7565"/>
<Loc EndOffset="7710" SrcFileId="2" StartOffset="7654"/>
</LocList>
<BasicStmnt CovItemId="S45" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="93">
<LocList>
<Loc EndOffset="7298" SrcFileId="2" StartOffset="7214"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S46" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="94">
<LocList>
<Loc EndOffset="7431" SrcFileId="2" StartOffset="7306"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S47" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="95">
<LocList>
<Loc EndOffset="7520" SrcFileId="2" StartOffset="7482"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S48" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="96">
<LocList>
<Loc EndOffset="7604" SrcFileId="2" StartOffset="7565"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S49" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="97">
<LocList>
<Loc EndOffset="7710" SrcFileId="2" StartOffset="7654"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="7" HierarchyLvlTypeId="4" Intrnl_Id="98" Name="PMS_UT_004_Registration_004">
<Header>
<Loc EndOffset="8250" SrcFileId="2" StartOffset="8184"/>
</Header>
<LocList>
<Loc EndOffset="8849" SrcFileId="2" StartOffset="8184"/>
</LocList>
<StmntSeq Intrnl_Id="99">
<LocList>
<Loc EndOffset="8404" SrcFileId="2" StartOffset="8320"/>
<Loc EndOffset="8447" SrcFileId="2" StartOffset="8429"/>
<Loc EndOffset="8533" SrcFileId="2" StartOffset="8483"/>
<Loc EndOffset="8663" SrcFileId="2" StartOffset="8541"/>
<Loc EndOffset="8729" SrcFileId="2" StartOffset="8691"/>
<Loc EndOffset="8785" SrcFileId="2" StartOffset="8737"/>
<Loc EndOffset="8845" SrcFileId="2" StartOffset="8793"/>
</LocList>
<BasicStmnt CovItemId="S50" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="100">
<LocList>
<Loc EndOffset="8404" SrcFileId="2" StartOffset="8320"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S51" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="101">
<LocList>
<Loc EndOffset="8447" SrcFileId="2" StartOffset="8429"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S52" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="102">
<LocList>
<Loc EndOffset="8533" SrcFileId="2" StartOffset="8483"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S53" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="103">
<LocList>
<Loc EndOffset="8663" SrcFileId="2" StartOffset="8541"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S54" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="104">
<LocList>
<Loc EndOffset="8729" SrcFileId="2" StartOffset="8691"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S55" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="105">
<LocList>
<Loc EndOffset="8785" SrcFileId="2" StartOffset="8737"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S56" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="106">
<LocList>
<Loc EndOffset="8845" SrcFileId="2" StartOffset="8793"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="8" HierarchyLvlTypeId="4" Intrnl_Id="107" Name="PMS_UT_005_Registration_005">
<Header>
<Loc EndOffset="9420" SrcFileId="2" StartOffset="9354"/>
</Header>
<LocList>
<Loc EndOffset="10025" SrcFileId="2" StartOffset="9354"/>
</LocList>
<StmntSeq Intrnl_Id="108">
<LocList>
<Loc EndOffset="9574" SrcFileId="2" StartOffset="9490"/>
<Loc EndOffset="9623" SrcFileId="2" StartOffset="9599"/>
<Loc EndOffset="9709" SrcFileId="2" StartOffset="9659"/>
<Loc EndOffset="9839" SrcFileId="2" StartOffset="9717"/>
<Loc EndOffset="9905" SrcFileId="2" StartOffset="9867"/>
<Loc EndOffset="9961" SrcFileId="2" StartOffset="9913"/>
<Loc EndOffset="10021" SrcFileId="2" StartOffset="9969"/>
</LocList>
<BasicStmnt CovItemId="S57" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="109">
<LocList>
<Loc EndOffset="9574" SrcFileId="2" StartOffset="9490"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S58" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="110">
<LocList>
<Loc EndOffset="9623" SrcFileId="2" StartOffset="9599"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S59" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="111">
<LocList>
<Loc EndOffset="9709" SrcFileId="2" StartOffset="9659"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S60" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="112">
<LocList>
<Loc EndOffset="9839" SrcFileId="2" StartOffset="9717"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S61" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="113">
<LocList>
<Loc EndOffset="9905" SrcFileId="2" StartOffset="9867"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S62" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="114">
<LocList>
<Loc EndOffset="9961" SrcFileId="2" StartOffset="9913"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S63" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="115">
<LocList>
<Loc EndOffset="10021" SrcFileId="2" StartOffset="9969"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="9" HierarchyLvlTypeId="4" Intrnl_Id="116" Name="PMS_UT_006_Registration_006">
<Header>
<Loc EndOffset="10652" SrcFileId="2" StartOffset="10586"/>
</Header>
<LocList>
<Loc EndOffset="11250" SrcFileId="2" StartOffset="10586"/>
</LocList>
<StmntSeq Intrnl_Id="117">
<LocList>
<Loc EndOffset="10806" SrcFileId="2" StartOffset="10722"/>
<Loc EndOffset="10850" SrcFileId="2" StartOffset="10833"/>
<Loc EndOffset="10934" SrcFileId="2" StartOffset="10884"/>
<Loc EndOffset="11064" SrcFileId="2" StartOffset="10942"/>
<Loc EndOffset="11130" SrcFileId="2" StartOffset="11092"/>
<Loc EndOffset="11186" SrcFileId="2" StartOffset="11138"/>
<Loc EndOffset="11246" SrcFileId="2" StartOffset="11194"/>
</LocList>
<BasicStmnt CovItemId="S64" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="118">
<LocList>
<Loc EndOffset="10806" SrcFileId="2" StartOffset="10722"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S65" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="119">
<LocList>
<Loc EndOffset="10850" SrcFileId="2" StartOffset="10833"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S66" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="120">
<LocList>
<Loc EndOffset="10934" SrcFileId="2" StartOffset="10884"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S67" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="121">
<LocList>
<Loc EndOffset="11064" SrcFileId="2" StartOffset="10942"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S68" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="122">
<LocList>
<Loc EndOffset="11130" SrcFileId="2" StartOffset="11092"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S69" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="123">
<LocList>
<Loc EndOffset="11186" SrcFileId="2" StartOffset="11138"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S70" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="124">
<LocList>
<Loc EndOffset="11246" SrcFileId="2" StartOffset="11194"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="10" HierarchyLvlTypeId="4" Intrnl_Id="125" Name="PMS_UT_007_Registration_007">
<Header>
<Loc EndOffset="11783" SrcFileId="2" StartOffset="11717"/>
</Header>
<LocList>
<Loc EndOffset="12397" SrcFileId="2" StartOffset="11717"/>
</LocList>
<StmntSeq Intrnl_Id="126">
<LocList>
<Loc EndOffset="11937" SrcFileId="2" StartOffset="11853"/>
<Loc EndOffset="11989" SrcFileId="2" StartOffset="11964"/>
<Loc EndOffset="12081" SrcFileId="2" StartOffset="12027"/>
<Loc EndOffset="12211" SrcFileId="2" StartOffset="12089"/>
<Loc EndOffset="12277" SrcFileId="2" StartOffset="12239"/>
<Loc EndOffset="12333" SrcFileId="2" StartOffset="12285"/>
<Loc EndOffset="12393" SrcFileId="2" StartOffset="12341"/>
</LocList>
<BasicStmnt CovItemId="S71" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="127">
<LocList>
<Loc EndOffset="11937" SrcFileId="2" StartOffset="11853"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S72" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="128">
<LocList>
<Loc EndOffset="11989" SrcFileId="2" StartOffset="11964"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S73" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="129">
<LocList>
<Loc EndOffset="12081" SrcFileId="2" StartOffset="12027"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S74" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="130">
<LocList>
<Loc EndOffset="12211" SrcFileId="2" StartOffset="12089"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S75" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="131">
<LocList>
<Loc EndOffset="12277" SrcFileId="2" StartOffset="12239"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S76" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="132">
<LocList>
<Loc EndOffset="12333" SrcFileId="2" StartOffset="12285"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S77" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="133">
<LocList>
<Loc EndOffset="12393" SrcFileId="2" StartOffset="12341"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="11" HierarchyLvlTypeId="4" Intrnl_Id="134" Name="PMS_UT_008_Registration_008">
<Header>
<Loc EndOffset="12928" SrcFileId="2" StartOffset="12862"/>
</Header>
<LocList>
<Loc EndOffset="13535" SrcFileId="2" StartOffset="12862"/>
</LocList>
<StmntSeq Intrnl_Id="135">
<LocList>
<Loc EndOffset="13082" SrcFileId="2" StartOffset="12998"/>
<Loc EndOffset="13127" SrcFileId="2" StartOffset="13109"/>
<Loc EndOffset="13219" SrcFileId="2" StartOffset="13165"/>
<Loc EndOffset="13349" SrcFileId="2" StartOffset="13227"/>
<Loc EndOffset="13415" SrcFileId="2" StartOffset="13377"/>
<Loc EndOffset="13471" SrcFileId="2" StartOffset="13423"/>
<Loc EndOffset="13531" SrcFileId="2" StartOffset="13479"/>
</LocList>
<BasicStmnt CovItemId="S78" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="136">
<LocList>
<Loc EndOffset="13082" SrcFileId="2" StartOffset="12998"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S79" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="137">
<LocList>
<Loc EndOffset="13127" SrcFileId="2" StartOffset="13109"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S80" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="138">
<LocList>
<Loc EndOffset="13219" SrcFileId="2" StartOffset="13165"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S81" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="139">
<LocList>
<Loc EndOffset="13349" SrcFileId="2" StartOffset="13227"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S82" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="140">
<LocList>
<Loc EndOffset="13415" SrcFileId="2" StartOffset="13377"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S83" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="141">
<LocList>
<Loc EndOffset="13471" SrcFileId="2" StartOffset="13423"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S84" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="142">
<LocList>
<Loc EndOffset="13531" SrcFileId="2" StartOffset="13479"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="12" HierarchyLvlTypeId="4" Intrnl_Id="143" Name="PMS_UT_009_Registration_009">
<Header>
<Loc EndOffset="14107" SrcFileId="2" StartOffset="14041"/>
</Header>
<LocList>
<Loc EndOffset="14722" SrcFileId="2" StartOffset="14041"/>
</LocList>
<StmntSeq Intrnl_Id="144">
<LocList>
<Loc EndOffset="14261" SrcFileId="2" StartOffset="14177"/>
<Loc EndOffset="14314" SrcFileId="2" StartOffset="14288"/>
<Loc EndOffset="14406" SrcFileId="2" StartOffset="14352"/>
<Loc EndOffset="14536" SrcFileId="2" StartOffset="14414"/>
<Loc EndOffset="14602" SrcFileId="2" StartOffset="14564"/>
<Loc EndOffset="14658" SrcFileId="2" StartOffset="14610"/>
<Loc EndOffset="14718" SrcFileId="2" StartOffset="14666"/>
</LocList>
<BasicStmnt CovItemId="S85" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="145">
<LocList>
<Loc EndOffset="14261" SrcFileId="2" StartOffset="14177"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S86" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="146">
<LocList>
<Loc EndOffset="14314" SrcFileId="2" StartOffset="14288"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S87" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="147">
<LocList>
<Loc EndOffset="14406" SrcFileId="2" StartOffset="14352"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S88" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="148">
<LocList>
<Loc EndOffset="14536" SrcFileId="2" StartOffset="14414"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S89" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="149">
<LocList>
<Loc EndOffset="14602" SrcFileId="2" StartOffset="14564"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S90" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="150">
<LocList>
<Loc EndOffset="14658" SrcFileId="2" StartOffset="14610"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S91" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="151">
<LocList>
<Loc EndOffset="14718" SrcFileId="2" StartOffset="14666"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="13" HierarchyLvlTypeId="4" Intrnl_Id="152" Name="PMS_UT_010_Registration_010">
<Header>
<Loc EndOffset="15255" SrcFileId="2" StartOffset="15189"/>
</Header>
<LocList>
<Loc EndOffset="15862" SrcFileId="2" StartOffset="15189"/>
</LocList>
<StmntSeq Intrnl_Id="153">
<LocList>
<Loc EndOffset="15409" SrcFileId="2" StartOffset="15325"/>
<Loc EndOffset="15454" SrcFileId="2" StartOffset="15436"/>
<Loc EndOffset="15546" SrcFileId="2" StartOffset="15492"/>
<Loc EndOffset="15676" SrcFileId="2" StartOffset="15554"/>
<Loc EndOffset="15742" SrcFileId="2" StartOffset="15704"/>
<Loc EndOffset="15798" SrcFileId="2" StartOffset="15750"/>
<Loc EndOffset="15858" SrcFileId="2" StartOffset="15806"/>
</LocList>
<BasicStmnt CovItemId="S92" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="154">
<LocList>
<Loc EndOffset="15409" SrcFileId="2" StartOffset="15325"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S93" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="155">
<LocList>
<Loc EndOffset="15454" SrcFileId="2" StartOffset="15436"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S94" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="156">
<LocList>
<Loc EndOffset="15546" SrcFileId="2" StartOffset="15492"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S95" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="157">
<LocList>
<Loc EndOffset="15676" SrcFileId="2" StartOffset="15554"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S96" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="158">
<LocList>
<Loc EndOffset="15742" SrcFileId="2" StartOffset="15704"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S97" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="159">
<LocList>
<Loc EndOffset="15798" SrcFileId="2" StartOffset="15750"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S98" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="160">
<LocList>
<Loc EndOffset="15858" SrcFileId="2" StartOffset="15806"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="14" HierarchyLvlTypeId="4" Intrnl_Id="161" Name="PMS_UT_011_Registration_011">
<Header>
<Loc EndOffset="16436" SrcFileId="2" StartOffset="16370"/>
</Header>
<LocList>
<Loc EndOffset="17051" SrcFileId="2" StartOffset="16370"/>
</LocList>
<StmntSeq Intrnl_Id="162">
<LocList>
<Loc EndOffset="16590" SrcFileId="2" StartOffset="16506"/>
<Loc EndOffset="16643" SrcFileId="2" StartOffset="16617"/>
<Loc EndOffset="16735" SrcFileId="2" StartOffset="16681"/>
<Loc EndOffset="16865" SrcFileId="2" StartOffset="16743"/>
<Loc EndOffset="16931" SrcFileId="2" StartOffset="16893"/>
<Loc EndOffset="16987" SrcFileId="2" StartOffset="16939"/>
<Loc EndOffset="17047" SrcFileId="2" StartOffset="16995"/>
</LocList>
<BasicStmnt CovItemId="S99" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="163">
<LocList>
<Loc EndOffset="16590" SrcFileId="2" StartOffset="16506"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S100" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="164">
<LocList>
<Loc EndOffset="16643" SrcFileId="2" StartOffset="16617"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S101" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="165">
<LocList>
<Loc EndOffset="16735" SrcFileId="2" StartOffset="16681"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S102" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="166">
<LocList>
<Loc EndOffset="16865" SrcFileId="2" StartOffset="16743"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S103" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="167">
<LocList>
<Loc EndOffset="16931" SrcFileId="2" StartOffset="16893"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S104" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="168">
<LocList>
<Loc EndOffset="16987" SrcFileId="2" StartOffset="16939"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S105" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="169">
<LocList>
<Loc EndOffset="17047" SrcFileId="2" StartOffset="16995"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="15" HierarchyLvlTypeId="4" Intrnl_Id="170" Name="PMS_UT_012_Registration_012">
<Header>
<Loc EndOffset="17730" SrcFileId="2" StartOffset="17664"/>
</Header>
<LocList>
<Loc EndOffset="18515" SrcFileId="2" StartOffset="17664"/>
</LocList>
<StmntSeq Intrnl_Id="171">
<LocList>
<Loc EndOffset="17884" SrcFileId="2" StartOffset="17800"/>
<Loc EndOffset="17945" SrcFileId="2" StartOffset="17923"/>
<Loc EndOffset="17974" SrcFileId="2" StartOffset="17949"/>
<Loc EndOffset="18066" SrcFileId="2" StartOffset="18012"/>
<Loc EndOffset="18124" SrcFileId="2" StartOffset="18070"/>
<Loc EndOffset="18257" SrcFileId="2" StartOffset="18132"/>
<Loc EndOffset="18323" SrcFileId="2" StartOffset="18285"/>
<Loc EndOffset="18405" SrcFileId="2" StartOffset="18366"/>
<Loc EndOffset="18511" SrcFileId="2" StartOffset="18455"/>
</LocList>
<BasicStmnt CovItemId="S106" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="172">
<LocList>
<Loc EndOffset="17884" SrcFileId="2" StartOffset="17800"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S107" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="173">
<LocList>
<Loc EndOffset="17945" SrcFileId="2" StartOffset="17923"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S108" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="174">
<LocList>
<Loc EndOffset="17974" SrcFileId="2" StartOffset="17949"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S109" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="175">
<LocList>
<Loc EndOffset="18066" SrcFileId="2" StartOffset="18012"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S110" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="176">
<LocList>
<Loc EndOffset="18124" SrcFileId="2" StartOffset="18070"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S111" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="177">
<LocList>
<Loc EndOffset="18257" SrcFileId="2" StartOffset="18132"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S112" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="178">
<LocList>
<Loc EndOffset="18323" SrcFileId="2" StartOffset="18285"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S113" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="179">
<LocList>
<Loc EndOffset="18405" SrcFileId="2" StartOffset="18366"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S114" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="180">
<LocList>
<Loc EndOffset="18511" SrcFileId="2" StartOffset="18455"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="16" HierarchyLvlTypeId="4" Intrnl_Id="181" Name="PMS_UT_013_Registration_013">
<Header>
<Loc EndOffset="19053" SrcFileId="2" StartOffset="18987"/>
</Header>
<LocList>
<Loc EndOffset="19666" SrcFileId="2" StartOffset="18987"/>
</LocList>
<StmntSeq Intrnl_Id="182">
<LocList>
<Loc EndOffset="19207" SrcFileId="2" StartOffset="19123"/>
<Loc EndOffset="19264" SrcFileId="2" StartOffset="19236"/>
<Loc EndOffset="19350" SrcFileId="2" StartOffset="19300"/>
<Loc EndOffset="19480" SrcFileId="2" StartOffset="19358"/>
<Loc EndOffset="19546" SrcFileId="2" StartOffset="19508"/>
<Loc EndOffset="19602" SrcFileId="2" StartOffset="19554"/>
<Loc EndOffset="19662" SrcFileId="2" StartOffset="19610"/>
</LocList>
<BasicStmnt CovItemId="S115" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="183">
<LocList>
<Loc EndOffset="19207" SrcFileId="2" StartOffset="19123"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S116" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="184">
<LocList>
<Loc EndOffset="19264" SrcFileId="2" StartOffset="19236"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S117" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="185">
<LocList>
<Loc EndOffset="19350" SrcFileId="2" StartOffset="19300"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S118" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="186">
<LocList>
<Loc EndOffset="19480" SrcFileId="2" StartOffset="19358"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S119" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="187">
<LocList>
<Loc EndOffset="19546" SrcFileId="2" StartOffset="19508"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S120" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="188">
<LocList>
<Loc EndOffset="19602" SrcFileId="2" StartOffset="19554"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S121" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="189">
<LocList>
<Loc EndOffset="19662" SrcFileId="2" StartOffset="19610"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="17" HierarchyLvlTypeId="4" Intrnl_Id="190" Name="PMS_UT_014_Registration_014">
<Header>
<Loc EndOffset="20201" SrcFileId="2" StartOffset="20135"/>
</Header>
<LocList>
<Loc EndOffset="20873" SrcFileId="2" StartOffset="20135"/>
</LocList>
<StmntSeq Intrnl_Id="191">
<LocList>
<Loc EndOffset="20355" SrcFileId="2" StartOffset="20271"/>
<Loc EndOffset="20400" SrcFileId="2" StartOffset="20384"/>
<Loc EndOffset="20482" SrcFileId="2" StartOffset="20432"/>
<Loc EndOffset="20615" SrcFileId="2" StartOffset="20490"/>
<Loc EndOffset="20681" SrcFileId="2" StartOffset="20643"/>
<Loc EndOffset="20763" SrcFileId="2" StartOffset="20724"/>
<Loc EndOffset="20869" SrcFileId="2" StartOffset="20813"/>
</LocList>
<BasicStmnt CovItemId="S122" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="192">
<LocList>
<Loc EndOffset="20355" SrcFileId="2" StartOffset="20271"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S123" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="193">
<LocList>
<Loc EndOffset="20400" SrcFileId="2" StartOffset="20384"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S124" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="194">
<LocList>
<Loc EndOffset="20482" SrcFileId="2" StartOffset="20432"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S125" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="195">
<LocList>
<Loc EndOffset="20615" SrcFileId="2" StartOffset="20490"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S126" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="196">
<LocList>
<Loc EndOffset="20681" SrcFileId="2" StartOffset="20643"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S127" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="197">
<LocList>
<Loc EndOffset="20763" SrcFileId="2" StartOffset="20724"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S128" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="198">
<LocList>
<Loc EndOffset="20869" SrcFileId="2" StartOffset="20813"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="18" HierarchyLvlTypeId="4" Intrnl_Id="199" Name="PMS_UT_015_Registration_015">
<Header>
<Loc EndOffset="21445" SrcFileId="2" StartOffset="21379"/>
</Header>
<LocList>
<Loc EndOffset="22072" SrcFileId="2" StartOffset="21379"/>
</LocList>
<StmntSeq Intrnl_Id="200">
<LocList>
<Loc EndOffset="21599" SrcFileId="2" StartOffset="21515"/>
<Loc EndOffset="21658" SrcFileId="2" StartOffset="21628"/>
<Loc EndOffset="21756" SrcFileId="2" StartOffset="21698"/>
<Loc EndOffset="21886" SrcFileId="2" StartOffset="21764"/>
<Loc EndOffset="21952" SrcFileId="2" StartOffset="21914"/>
<Loc EndOffset="22008" SrcFileId="2" StartOffset="21960"/>
<Loc EndOffset="22068" SrcFileId="2" StartOffset="22016"/>
</LocList>
<BasicStmnt CovItemId="S129" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="201">
<LocList>
<Loc EndOffset="21599" SrcFileId="2" StartOffset="21515"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S130" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="202">
<LocList>
<Loc EndOffset="21658" SrcFileId="2" StartOffset="21628"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S131" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="203">
<LocList>
<Loc EndOffset="21756" SrcFileId="2" StartOffset="21698"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S132" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="204">
<LocList>
<Loc EndOffset="21886" SrcFileId="2" StartOffset="21764"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S133" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="205">
<LocList>
<Loc EndOffset="21952" SrcFileId="2" StartOffset="21914"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S134" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="206">
<LocList>
<Loc EndOffset="22008" SrcFileId="2" StartOffset="21960"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S135" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="207">
<LocList>
<Loc EndOffset="22068" SrcFileId="2" StartOffset="22016"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="19" HierarchyLvlTypeId="4" Intrnl_Id="208" Name="PMS_UT_016_Registration_016">
<Header>
<Loc EndOffset="22608" SrcFileId="2" StartOffset="22542"/>
</Header>
<LocList>
<Loc EndOffset="23226" SrcFileId="2" StartOffset="22542"/>
</LocList>
<StmntSeq Intrnl_Id="209">
<LocList>
<Loc EndOffset="22762" SrcFileId="2" StartOffset="22678"/>
<Loc EndOffset="22818" SrcFileId="2" StartOffset="22789"/>
<Loc EndOffset="22910" SrcFileId="2" StartOffset="22856"/>
<Loc EndOffset="23040" SrcFileId="2" StartOffset="22918"/>
<Loc EndOffset="23106" SrcFileId="2" StartOffset="23068"/>
<Loc EndOffset="23162" SrcFileId="2" StartOffset="23114"/>
<Loc EndOffset="23222" SrcFileId="2" StartOffset="23170"/>
</LocList>
<BasicStmnt CovItemId="S136" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="210">
<LocList>
<Loc EndOffset="22762" SrcFileId="2" StartOffset="22678"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S137" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="211">
<LocList>
<Loc EndOffset="22818" SrcFileId="2" StartOffset="22789"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S138" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="212">
<LocList>
<Loc EndOffset="22910" SrcFileId="2" StartOffset="22856"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S139" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="213">
<LocList>
<Loc EndOffset="23040" SrcFileId="2" StartOffset="22918"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S140" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="214">
<LocList>
<Loc EndOffset="23106" SrcFileId="2" StartOffset="23068"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S141" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="215">
<LocList>
<Loc EndOffset="23162" SrcFileId="2" StartOffset="23114"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S142" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="216">
<LocList>
<Loc EndOffset="23222" SrcFileId="2" StartOffset="23170"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="20" HierarchyLvlTypeId="4" Intrnl_Id="217" Name="PMS_UT_017_Registration_017">
<Header>
<Loc EndOffset="23754" SrcFileId="2" StartOffset="23688"/>
</Header>
<LocList>
<Loc EndOffset="24363" SrcFileId="2" StartOffset="23688"/>
</LocList>
<StmntSeq Intrnl_Id="218">
<LocList>
<Loc EndOffset="23908" SrcFileId="2" StartOffset="23824"/>
<Loc EndOffset="23958" SrcFileId="2" StartOffset="23934"/>
<Loc EndOffset="24047" SrcFileId="2" StartOffset="23995"/>
<Loc EndOffset="24177" SrcFileId="2" StartOffset="24055"/>
<Loc EndOffset="24243" SrcFileId="2" StartOffset="24205"/>
<Loc EndOffset="24299" SrcFileId="2" StartOffset="24251"/>
<Loc EndOffset="24359" SrcFileId="2" StartOffset="24307"/>
</LocList>
<BasicStmnt CovItemId="S143" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="219">
<LocList>
<Loc EndOffset="23908" SrcFileId="2" StartOffset="23824"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S144" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="220">
<LocList>
<Loc EndOffset="23958" SrcFileId="2" StartOffset="23934"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S145" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="221">
<LocList>
<Loc EndOffset="24047" SrcFileId="2" StartOffset="23995"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S146" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="222">
<LocList>
<Loc EndOffset="24177" SrcFileId="2" StartOffset="24055"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S147" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="223">
<LocList>
<Loc EndOffset="24243" SrcFileId="2" StartOffset="24205"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S148" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="224">
<LocList>
<Loc EndOffset="24299" SrcFileId="2" StartOffset="24251"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S149" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="225">
<LocList>
<Loc EndOffset="24359" SrcFileId="2" StartOffset="24307"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="21" HierarchyLvlTypeId="4" Intrnl_Id="226" Name="PMS_UT_018_Registration_018">
<Header>
<Loc EndOffset="24898" SrcFileId="2" StartOffset="24832"/>
</Header>
<LocList>
<Loc EndOffset="25511" SrcFileId="2" StartOffset="24832"/>
</LocList>
<StmntSeq Intrnl_Id="227">
<LocList>
<Loc EndOffset="25052" SrcFileId="2" StartOffset="24968"/>
<Loc EndOffset="25103" SrcFileId="2" StartOffset="25079"/>
<Loc EndOffset="25195" SrcFileId="2" StartOffset="25141"/>
<Loc EndOffset="25325" SrcFileId="2" StartOffset="25203"/>
<Loc EndOffset="25391" SrcFileId="2" StartOffset="25353"/>
<Loc EndOffset="25447" SrcFileId="2" StartOffset="25399"/>
<Loc EndOffset="25507" SrcFileId="2" StartOffset="25455"/>
</LocList>
<BasicStmnt CovItemId="S150" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="228">
<LocList>
<Loc EndOffset="25052" SrcFileId="2" StartOffset="24968"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S151" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="229">
<LocList>
<Loc EndOffset="25103" SrcFileId="2" StartOffset="25079"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S152" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="230">
<LocList>
<Loc EndOffset="25195" SrcFileId="2" StartOffset="25141"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S153" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="231">
<LocList>
<Loc EndOffset="25325" SrcFileId="2" StartOffset="25203"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S154" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="232">
<LocList>
<Loc EndOffset="25391" SrcFileId="2" StartOffset="25353"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S155" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="233">
<LocList>
<Loc EndOffset="25447" SrcFileId="2" StartOffset="25399"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S156" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="234">
<LocList>
<Loc EndOffset="25507" SrcFileId="2" StartOffset="25455"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="22" HierarchyLvlTypeId="4" Intrnl_Id="235" Name="PMS_UT_019_Registration_019">
<Header>
<Loc EndOffset="26060" SrcFileId="2" StartOffset="25994"/>
</Header>
<LocList>
<Loc EndOffset="26835" SrcFileId="2" StartOffset="25994"/>
</LocList>
<StmntSeq Intrnl_Id="236">
<LocList>
<Loc EndOffset="26214" SrcFileId="2" StartOffset="26130"/>
<Loc EndOffset="26267" SrcFileId="2" StartOffset="26249"/>
<Loc EndOffset="26289" SrcFileId="2" StartOffset="26271"/>
<Loc EndOffset="26389" SrcFileId="2" StartOffset="26335"/>
<Loc EndOffset="26447" SrcFileId="2" StartOffset="26393"/>
<Loc EndOffset="26577" SrcFileId="2" StartOffset="26455"/>
<Loc EndOffset="26643" SrcFileId="2" StartOffset="26605"/>
<Loc EndOffset="26725" SrcFileId="2" StartOffset="26686"/>
<Loc EndOffset="26831" SrcFileId="2" StartOffset="26775"/>
</LocList>
<BasicStmnt CovItemId="S157" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="237">
<LocList>
<Loc EndOffset="26214" SrcFileId="2" StartOffset="26130"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S158" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="238">
<LocList>
<Loc EndOffset="26267" SrcFileId="2" StartOffset="26249"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S159" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="239">
<LocList>
<Loc EndOffset="26289" SrcFileId="2" StartOffset="26271"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S160" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="240">
<LocList>
<Loc EndOffset="26389" SrcFileId="2" StartOffset="26335"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S161" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="241">
<LocList>
<Loc EndOffset="26447" SrcFileId="2" StartOffset="26393"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S162" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="242">
<LocList>
<Loc EndOffset="26577" SrcFileId="2" StartOffset="26455"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S163" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="243">
<LocList>
<Loc EndOffset="26643" SrcFileId="2" StartOffset="26605"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S164" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="244">
<LocList>
<Loc EndOffset="26725" SrcFileId="2" StartOffset="26686"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S165" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="245">
<LocList>
<Loc EndOffset="26831" SrcFileId="2" StartOffset="26775"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="23" HierarchyLvlTypeId="4" Intrnl_Id="246" Name="PMS_UT_020_Registration_020">
<Header>
<Loc EndOffset="27403" SrcFileId="2" StartOffset="27337"/>
</Header>
<LocList>
<Loc EndOffset="28109" SrcFileId="2" StartOffset="27337"/>
</LocList>
<StmntSeq Intrnl_Id="247">
<LocList>
<Loc EndOffset="27557" SrcFileId="2" StartOffset="27473"/>
<Loc EndOffset="27613" SrcFileId="2" StartOffset="27592"/>
<Loc EndOffset="27635" SrcFileId="2" StartOffset="27617"/>
<Loc EndOffset="27735" SrcFileId="2" StartOffset="27681"/>
<Loc EndOffset="27793" SrcFileId="2" StartOffset="27739"/>
<Loc EndOffset="27923" SrcFileId="2" StartOffset="27801"/>
<Loc EndOffset="27989" SrcFileId="2" StartOffset="27951"/>
<Loc EndOffset="28045" SrcFileId="2" StartOffset="27997"/>
<Loc EndOffset="28105" SrcFileId="2" StartOffset="28053"/>
</LocList>
<BasicStmnt CovItemId="S166" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="248">
<LocList>
<Loc EndOffset="27557" SrcFileId="2" StartOffset="27473"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S167" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="249">
<LocList>
<Loc EndOffset="27613" SrcFileId="2" StartOffset="27592"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S168" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="250">
<LocList>
<Loc EndOffset="27635" SrcFileId="2" StartOffset="27617"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S169" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="251">
<LocList>
<Loc EndOffset="27735" SrcFileId="2" StartOffset="27681"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S170" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="252">
<LocList>
<Loc EndOffset="27793" SrcFileId="2" StartOffset="27739"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S171" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="253">
<LocList>
<Loc EndOffset="27923" SrcFileId="2" StartOffset="27801"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S172" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="254">
<LocList>
<Loc EndOffset="27989" SrcFileId="2" StartOffset="27951"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S173" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="255">
<LocList>
<Loc EndOffset="28045" SrcFileId="2" StartOffset="27997"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S174" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="256">
<LocList>
<Loc EndOffset="28105" SrcFileId="2" StartOffset="28053"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
<HierarchyLvl HierarchyLvlId="24" HierarchyLvlTypeId="4" Intrnl_Id="257" Name="PMS_UT_021_Registration_021">
<Header>
<Loc EndOffset="28752" SrcFileId="2" StartOffset="28686"/>
</Header>
<LocList>
<Loc EndOffset="30243" SrcFileId="2" StartOffset="28686"/>
</LocList>
<StmntSeq Intrnl_Id="258">
<LocList>
<Loc EndOffset="28906" SrcFileId="2" StartOffset="28822"/>
<Loc EndOffset="28963" SrcFileId="2" StartOffset="28946"/>
<Loc EndOffset="28989" SrcFileId="2" StartOffset="28967"/>
<Loc EndOffset="29018" SrcFileId="2" StartOffset="28993"/>
<Loc EndOffset="29040" SrcFileId="2" StartOffset="29022"/>
<Loc EndOffset="29070" SrcFileId="2" StartOffset="29044"/>
<Loc EndOffset="29100" SrcFileId="2" StartOffset="29074"/>
<Loc EndOffset="29125" SrcFileId="2" StartOffset="29104"/>
<Loc EndOffset="29168" SrcFileId="2" StartOffset="29129"/>
<Loc EndOffset="29204" SrcFileId="2" StartOffset="29172"/>
<Loc EndOffset="29227" SrcFileId="2" StartOffset="29208"/>
<Loc EndOffset="29264" SrcFileId="2" StartOffset="29231"/>
<Loc EndOffset="29357" SrcFileId="2" StartOffset="29307"/>
<Loc EndOffset="29415" SrcFileId="2" StartOffset="29361"/>
<Loc EndOffset="29473" SrcFileId="2" StartOffset="29419"/>
<Loc EndOffset="29527" SrcFileId="2" StartOffset="29477"/>
<Loc EndOffset="29581" SrcFileId="2" StartOffset="29531"/>
<Loc EndOffset="29635" SrcFileId="2" StartOffset="29585"/>
<Loc EndOffset="29697" SrcFileId="2" StartOffset="29639"/>
<Loc EndOffset="29755" SrcFileId="2" StartOffset="29701"/>
<Loc EndOffset="29811" SrcFileId="2" StartOffset="29759"/>
<Loc EndOffset="29869" SrcFileId="2" StartOffset="29815"/>
<Loc EndOffset="29927" SrcFileId="2" StartOffset="29873"/>
<Loc EndOffset="30057" SrcFileId="2" StartOffset="29935"/>
<Loc EndOffset="30123" SrcFileId="2" StartOffset="30085"/>
<Loc EndOffset="30179" SrcFileId="2" StartOffset="30131"/>
<Loc EndOffset="30239" SrcFileId="2" StartOffset="30187"/>
</LocList>
<BasicStmnt CovItemId="S175" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="259">
<LocList>
<Loc EndOffset="28906" SrcFileId="2" StartOffset="28822"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S176" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="260">
<LocList>
<Loc EndOffset="28963" SrcFileId="2" StartOffset="28946"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S177" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="261">
<LocList>
<Loc EndOffset="28989" SrcFileId="2" StartOffset="28967"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S178" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="262">
<LocList>
<Loc EndOffset="29018" SrcFileId="2" StartOffset="28993"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S179" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="263">
<LocList>
<Loc EndOffset="29040" SrcFileId="2" StartOffset="29022"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S180" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="264">
<LocList>
<Loc EndOffset="29070" SrcFileId="2" StartOffset="29044"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S181" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="265">
<LocList>
<Loc EndOffset="29100" SrcFileId="2" StartOffset="29074"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S182" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="266">
<LocList>
<Loc EndOffset="29125" SrcFileId="2" StartOffset="29104"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S183" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="267">
<LocList>
<Loc EndOffset="29168" SrcFileId="2" StartOffset="29129"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S184" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="268">
<LocList>
<Loc EndOffset="29204" SrcFileId="2" StartOffset="29172"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S185" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="269">
<LocList>
<Loc EndOffset="29227" SrcFileId="2" StartOffset="29208"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S186" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="270">
<LocList>
<Loc EndOffset="29264" SrcFileId="2" StartOffset="29231"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S187" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="271">
<LocList>
<Loc EndOffset="29357" SrcFileId="2" StartOffset="29307"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S188" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="272">
<LocList>
<Loc EndOffset="29415" SrcFileId="2" StartOffset="29361"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S189" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="273">
<LocList>
<Loc EndOffset="29473" SrcFileId="2" StartOffset="29419"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S190" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="274">
<LocList>
<Loc EndOffset="29527" SrcFileId="2" StartOffset="29477"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S191" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="275">
<LocList>
<Loc EndOffset="29581" SrcFileId="2" StartOffset="29531"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S192" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="276">
<LocList>
<Loc EndOffset="29635" SrcFileId="2" StartOffset="29585"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S193" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="277">
<LocList>
<Loc EndOffset="29697" SrcFileId="2" StartOffset="29639"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S194" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="278">
<LocList>
<Loc EndOffset="29755" SrcFileId="2" StartOffset="29701"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S195" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="279">
<LocList>
<Loc EndOffset="29811" SrcFileId="2" StartOffset="29759"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S196" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="280">
<LocList>
<Loc EndOffset="29869" SrcFileId="2" StartOffset="29815"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S197" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="281">
<LocList>
<Loc EndOffset="29927" SrcFileId="2" StartOffset="29873"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S198" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="282">
<LocList>
<Loc EndOffset="30057" SrcFileId="2" StartOffset="29935"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S199" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="283">
<LocList>
<Loc EndOffset="30123" SrcFileId="2" StartOffset="30085"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S200" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="284">
<LocList>
<Loc EndOffset="30179" SrcFileId="2" StartOffset="30131"/>
</LocList>
</BasicStmnt>
<BasicStmnt CovItemId="S201" CovItemPrefix="controller.RegistrationTest.java" Intrnl_Id="285">
<LocList>
<Loc EndOffset="30239" SrcFileId="2" StartOffset="30187"/>
</LocList>
</BasicStmnt>
</StmntSeq>
</HierarchyLvl>
</HierarchyLvl>
</HierarchyLvl>
</HierarchyLvl>
</MASTRoot>
</TestSessionContainer>
